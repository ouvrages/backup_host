#!/usr/bin/env ruby

require 'fileutils'
require 'yaml'

include FileUtils

if ARGV.size != 1
  raise "usage: #$0 <config>"
end

config_file = ARGV.first
config = YAML.load(File.read(config_file))

remote = config["remote"]
id_file = config["key"]
root = config["backup_root"]
paths = config["paths"]

host_key = %x(ssh-keyscan #{remote})
known_hosts_file = File.expand_path("~/.ssh/known_hosts")
known_hosts = File.read(known_hosts_file).split("\n")
unless known_hosts.grep(host_key)
  puts "Adding host key #{host_key}"
  known_hosts << host_key
  File.open(known_hosts_file, "w") { |f| f.puts known_hosts.join("\n") }
end

now = Time.now
name = now.strftime('%Y-%m-%d_%H%M%S') + "." + now.usec.to_s

paths.each do |path_name, path|
  dest = File.join(root, path_name)
  mkpath dest
  backup_dir = File.join(dest, name)
  last_backup = File.join(dest, "last")

  cmd = [
    "rsync",
    "--archive",
    "--verbose",
    "--one-file-system",
    "--delete",
    "--compress",
    "--rsh", "ssh -i #{id_file}",
  ]
  if File.exists?(last_backup)
    cmd += ["--link-dest", last_backup]
  end
  cmd += [
    remote + ":" + path,
    backup_dir,
  ]

  puts cmd.inspect
  break unless system *cmd
  rm last_backup
  symlink(name, last_backup)
end
